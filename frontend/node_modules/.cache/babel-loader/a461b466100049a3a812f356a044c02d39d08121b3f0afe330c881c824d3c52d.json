{"ast":null,"code":"var _jsxFileName = \"D:\\\\Office\\\\Code\\\\NodeJs\\\\Online-Exam-System-master\\\\frontend\\\\src\\\\components\\\\SideNav.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndicatorView = ({\n  id,\n  index,\n  type,\n  answer\n}) => {\n  const flag = answer === \"\" ? \"unsolved\" : \"finished\";\n  const targetEle = '#question' + type + '-' + id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ScrollIntoView, {\n      selector: targetEle,\n      children: [\"problem\" + index, \" : \", flag]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = IndicatorView;\nconst SectionView = ({\n  questionArr,\n  index,\n  handlerSectionClick,\n  show\n}) => {\n  const flag = show ? \"block\" : \"none\";\n  const displayStyle = {\n    display: flag\n  };\n  const lists = questionArr.map((item, index) => /*#__PURE__*/_jsxDEV(IndicatorView, {\n    id: item.id,\n    index: index + 1,\n    type: item.type,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/exam/' + index,\n      onClick: () => handlerSectionClick(index - 1),\n      children: [\" \", \"Section\" + index, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: displayStyle,\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n_c2 = SectionView;\nconst SectionList = ({\n  questionSet,\n  sectionTotal,\n  handlerSectionClick,\n  showArr\n}) => {\n  const range = [...Array(sectionTotal).keys()];\n  const lists = range.map(item => {\n    const index = item + 1;\n    const questionArr = questionSet['section' + index];\n    return /*#__PURE__*/_jsxDEV(SectionView, {\n      questionArr: questionArr,\n      index: index,\n      handlerSectionClick: handlerSectionClick,\n      show: showArr[item]\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", lists, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_c3 = SectionList;\nclass SideNav extends Component {\n  constructor() {\n    super();\n    this.handlerSectionClick = index => {\n      const oldValue = this.state.showArr;\n      const newValue = new Array(this.sectionTotal).fill(false);\n      newValue[index] = true;\n      this.setState({\n        showArr: newValue\n      });\n    };\n    this.state = {\n      showArr: []\n    };\n    this.sectionTotal = 0;\n  }\n  componentDidMount() {\n    this.sectionTotal = Object.keys(this.props.questionSet).length;\n    let sectionsOpen = new Array(this.sectionTotal).fill(false);\n    this.setState({\n      showArr: sectionsOpen\n    });\n  }\n  componentWillUnmount() {\n    this.setState({\n      showArr: []\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Navigation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SectionList, {\n        questionSet: this.props.questionSet,\n        sectionTotal: this.sectionTotal,\n        handlerSectionClick: this.handlerSectionClick,\n        showArr: this.state.showArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  console.log(state.examData.data);\n  return {\n    questionSet: state.examData.data\n  };\n};\nconst SideNavContainer = withRouter(connect(mapStateToProps)(SideNav));\nexport default SideNavContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"IndicatorView\");\n$RefreshReg$(_c2, \"SectionView\");\n$RefreshReg$(_c3, \"SectionList\");","map":{"version":3,"names":["React","Component","Link","withRouter","ScrollIntoView","connect","jsxDEV","_jsxDEV","IndicatorView","id","index","type","answer","flag","targetEle","children","selector","fileName","_jsxFileName","lineNumber","columnNumber","_c","SectionView","questionArr","handlerSectionClick","show","displayStyle","display","lists","map","item","to","onClick","style","_c2","SectionList","questionSet","sectionTotal","showArr","range","Array","keys","_c3","SideNav","constructor","oldValue","state","newValue","fill","setState","componentDidMount","Object","props","length","sectionsOpen","componentWillUnmount","render","mapStateToProps","console","log","examData","data","SideNavContainer","$RefreshReg$"],"sources":["D:/Office/Code/NodeJs/Online-Exam-System-master/frontend/src/components/SideNav.js"],"sourcesContent":["import React from 'react';\nimport { Component } from 'react'\nimport { Link , withRouter} from 'react-router-dom'\nimport ScrollIntoView from 'react-scroll-into-view'\nimport { connect } from 'react-redux'\n\n\nconst IndicatorView = ({id, index, type, answer})=> {\n    const flag = answer===\"\" ? \"unsolved\" : \"finished\"\n    const targetEle = '#question' +type+ '-' +id\n    return(\n        <div>\n            <ScrollIntoView selector={targetEle}>\n                {\"problem\" + index} : {flag}\n            </ScrollIntoView>\n        </div>\n    )\n}\n\n\nconst SectionView =({questionArr, index, handlerSectionClick, show})=>{\n    const flag = show ? \"block\" : \"none\"\n    const displayStyle = { display: flag }\n    const lists = questionArr.map(\n        (item, index)=>(<IndicatorView key={item.id}\n                             id={item.id}\n                             index = {index+1}\n                             type={item.type}\n                             answer={item.answer} />)\n    )\n\n    return (<div>\n                <Link to={'/exam/'+index} onClick={()=>handlerSectionClick(index-1)}> {\"Section\" + index} </Link>\n                <div style={displayStyle}>\n                    {lists}\n                </div>\n            </div>)\n}\n\nconst SectionList = ({questionSet, sectionTotal, handlerSectionClick, showArr})=>{\n    const range = [...Array(sectionTotal).keys()]\n    const lists = range.map((item)=>{\n        const index = item+1\n        const questionArr = questionSet['section'+index]\n        return <SectionView key={item}\n                            questionArr={questionArr}\n                            index={index}\n                            handlerSectionClick={handlerSectionClick}\n                            show={showArr[item]}\n                />\n    })\n\n    return <div> {lists} </div>\n}\n\n\nclass SideNav extends Component{\n    constructor(){\n        super()\n        this.state={\n            showArr: []\n        }\n        this.sectionTotal=0\n    }\n\n    componentDidMount(){\n        this.sectionTotal = Object.keys(this.props.questionSet).length\n        let sectionsOpen = new Array(this.sectionTotal).fill(false);\n        this.setState({\n            showArr: sectionsOpen\n        });\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            showArr: []\n        })\n    }\n\n    handlerSectionClick=(index)=>{\n        const oldValue = this.state.showArr\n        const newValue = new Array(this.sectionTotal).fill(false);\n        newValue[index] = true;\n        this.setState({\n            showArr: newValue\n        });\n    }\n\n    render(){\n        return <div>\n                    <h4> Navigation </h4>\n                    <SectionList questionSet={this.props.questionSet}\n                                 sectionTotal={this.sectionTotal}\n                                 handlerSectionClick={this.handlerSectionClick}\n                                 showArr = {this.state.showArr} />\n               </div>\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    console.log(state.examData.data);\n    return {questionSet: state.examData.data}\n}\n\nconst SideNavContainer = withRouter(connect(mapStateToProps)(SideNav))\nexport default SideNavContainer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}