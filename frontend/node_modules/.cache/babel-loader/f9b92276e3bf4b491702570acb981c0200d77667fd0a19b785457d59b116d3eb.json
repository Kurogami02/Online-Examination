{"ast":null,"code":"var _jsxFileName = \"D:\\\\Office\\\\Code\\\\NodeJs\\\\Online-Exam-System-master\\\\frontend\\\\src\\\\components\\\\Section.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Questions from './Questions';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport { asynchorousSendAnswer } from '../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = ({\n  match,\n  questionPayload,\n  submitAnswer,\n  submitted\n}) => {\n  const targetSectionNum = match.params.sectionNum ? parseInt(match.params.sectionNum) : 1;\n  const targetSectionKey = 'section' + targetSectionNum;\n  const targetQuestionSet = questionPayload[targetSectionKey];\n\n  // const sectionTotal = Object.keys(questionPayload).length\n  // const prevSec = targetSectionNum-1>0 ? (targetSectionNum-1) : 1\n  // const nextSec = targetSectionNum+1<sectionTotal ? (targetSectionNum+1) : sectionTotal\n\n  const RedirectPlaceholder = submitted ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/score\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 45\n  }, this) : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Questions, {\n      questionArr: targetQuestionSet,\n      targetType: targetSectionNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        submitAnswer(questionPayload);\n      },\n      children: \" submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), RedirectPlaceholder]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = Section;\nconst mapStateToProps = state => ({\n  questionPayload: state.examData.data,\n  submitted: state.scoreData.isSubmitted\n});\nconst mapDispatchToProps = dispatch => ({\n  submitAnswer: questionPayload => {\n    dispatch(asynchorousSendAnswer(questionPayload));\n  }\n});\nconst SectionContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Section));\nexport default SectionContainer;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","connect","Questions","withRouter","Link","Redirect","asynchorousSendAnswer","jsxDEV","_jsxDEV","Section","match","questionPayload","submitAnswer","submitted","targetSectionNum","params","sectionNum","parseInt","targetSectionKey","targetQuestionSet","RedirectPlaceholder","to","fileName","_jsxFileName","lineNumber","columnNumber","children","questionArr","targetType","onClick","_c","mapStateToProps","state","examData","data","scoreData","isSubmitted","mapDispatchToProps","dispatch","SectionContainer","$RefreshReg$"],"sources":["D:/Office/Code/NodeJs/Online-Exam-System-master/frontend/src/components/Section.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport Questions from './Questions';\nimport { withRouter, Link, Redirect } from 'react-router-dom'\nimport { asynchorousSendAnswer } from '../actions/actions'\n\nconst Section=({ match, questionPayload, submitAnswer, submitted})=>{\n\n    const targetSectionNum = match.params.sectionNum ?  parseInt(match.params.sectionNum) : 1 ;\n    const targetSectionKey = 'section' + targetSectionNum\n    const targetQuestionSet = questionPayload[targetSectionKey];\n\n    // const sectionTotal = Object.keys(questionPayload).length\n    // const prevSec = targetSectionNum-1>0 ? (targetSectionNum-1) : 1\n    // const nextSec = targetSectionNum+1<sectionTotal ? (targetSectionNum+1) : sectionTotal\n\n    const RedirectPlaceholder = submitted ? <Redirect to='/score' /> : \"\"\n    return <div>\n                <Questions questionArr= {targetQuestionSet}\n                           targetType={targetSectionNum} />\n                <button onClick={()=>{submitAnswer(questionPayload)}}> submit </button>\n                { RedirectPlaceholder }\n           </div>\n}\n\nconst mapStateToProps=(state)=>({\n    questionPayload: state.examData.data,\n    submitted: state.scoreData.isSubmitted\n})\n\n\nconst mapDispatchToProps=(dispatch)=>({\n    submitAnswer: (questionPayload)=>{\n        dispatch(asynchorousSendAnswer(questionPayload))\n    }\n})\n\nconst SectionContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Section))\nexport default SectionContainer\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAC7D,SAASC,qBAAqB,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,OAAO,GAACA,CAAC;EAAEC,KAAK;EAAEC,eAAe;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAG;EAEhE,MAAMC,gBAAgB,GAAGJ,KAAK,CAACK,MAAM,CAACC,UAAU,GAAIC,QAAQ,CAACP,KAAK,CAACK,MAAM,CAACC,UAAU,CAAC,GAAG,CAAC;EACzF,MAAME,gBAAgB,GAAG,SAAS,GAAGJ,gBAAgB;EACrD,MAAMK,iBAAiB,GAAGR,eAAe,CAACO,gBAAgB,CAAC;;EAE3D;EACA;EACA;;EAEA,MAAME,mBAAmB,GAAGP,SAAS,gBAAGL,OAAA,CAACH,QAAQ;IAACgB,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,EAAE;EACrE,oBAAOjB,OAAA;IAAAkB,QAAA,gBACKlB,OAAA,CAACN,SAAS;MAACyB,WAAW,EAAGR,iBAAkB;MAChCS,UAAU,EAAEd;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CjB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAI;QAACjB,YAAY,CAACD,eAAe,CAAC;MAAA,CAAE;MAAAe,QAAA,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrEL,mBAAmB;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AACjB,CAAC;AAAAK,EAAA,GAjBKrB,OAAO;AAmBb,MAAMsB,eAAe,GAAEC,KAAK,KAAI;EAC5BrB,eAAe,EAAEqB,KAAK,CAACC,QAAQ,CAACC,IAAI;EACpCrB,SAAS,EAAEmB,KAAK,CAACG,SAAS,CAACC;AAC/B,CAAC,CAAC;AAGF,MAAMC,kBAAkB,GAAEC,QAAQ,KAAI;EAClC1B,YAAY,EAAGD,eAAe,IAAG;IAC7B2B,QAAQ,CAAChC,qBAAqB,CAACK,eAAe,CAAC,CAAC;EACpD;AACJ,CAAC,CAAC;AAEF,MAAM4B,gBAAgB,GAAGpC,UAAU,CAACF,OAAO,CAAC8B,eAAe,EAAEM,kBAAkB,CAAC,CAAC5B,OAAO,CAAC,CAAC;AAC1F,eAAe8B,gBAAgB;AAAA,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}