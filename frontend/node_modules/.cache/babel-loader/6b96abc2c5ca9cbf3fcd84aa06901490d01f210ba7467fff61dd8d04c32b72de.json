{"ast":null,"code":"var _jsxFileName = \"D:\\\\Office\\\\Code\\\\NodeJs\\\\Online-Exam-System-master\\\\frontend\\\\src\\\\components\\\\SignUp.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport fetch from 'cross-fetch';\nimport Auth from '../utils/Auth';\nimport { resolve } from '../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = ({\n  history,\n  prompt,\n  dispatch\n}) => {\n  let userInfo = {\n    email: \"\",\n    password: \"\"\n  };\n  const readEmail = e => {\n    userInfo.email = e.target.value;\n  };\n  const readPassword = e => {\n    userInfo.password = e.target.value;\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (userInfo.email === \"\" || userInfo.password === \"\") {\n      alert(\"Error: empty value\");\n      return;\n    }\n    fetch(\"http://localhost:3002/auth/signup\", {\n      method: 'POST',\n      body: JSON.stringify(userInfo),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      if (!res.status) alert(res.message);\n      dispatch(resolve(res));\n      Auth.authenticateUser(res.token, res.email);\n      if (res.token) {\n        console.log(Auth.getToken());\n        history.push('/exam');\n      } else {\n        return;\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-signin\",\n      onSubmit: submitHandler,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-signin-heading\",\n        children: \"Sign Up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"sr-only\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"inputEmail\",\n        className: \"form-control\",\n        onBlur: readEmail,\n        name: \"email\",\n        placeholder: \"input email\",\n        defaultValue: \"a@123.com\",\n        required: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputPassword\",\n        className: \"sr-only\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"inputPassword\",\n        className: \"form-control\",\n        onBlur: readPassword,\n        name: \"password\",\n        placeholder: \"input password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-primary btn-block\",\n        children: \" Signup \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_c = SignUp;\nconst mapStateToProps = state => ({\n  prompt: state.userData.data.message\n});\nconst SignUpContainer = withRouter(connect(mapStateToProps)(SignUp));\nexport default SignUpContainer;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","connect","Link","withRouter","fetch","Auth","resolve","jsxDEV","_jsxDEV","SignUp","history","prompt","dispatch","userInfo","email","password","readEmail","e","target","value","readPassword","submitHandler","preventDefault","alert","method","body","JSON","stringify","headers","then","res","json","status","message","authenticateUser","token","console","log","getToken","push","catch","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onBlur","name","placeholder","defaultValue","required","autoFocus","_c","mapStateToProps","state","userData","data","SignUpContainer","$RefreshReg$"],"sources":["D:/Office/Code/NodeJs/Online-Exam-System-master/frontend/src/components/SignUp.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport fetch from 'cross-fetch'\nimport Auth from '../utils/Auth'\nimport {resolve} from '../actions/actions'\n\nconst SignUp = ({history, prompt, dispatch})=>{\n    let userInfo = {\n        email: \"\",\n        password: \"\"\n    }\n\n    const readEmail = (e)=>{\n        userInfo.email = e.target.value;\n    }\n\n    const readPassword = (e)=>{\n        userInfo.password = e.target.value;\n    }\n\n    const submitHandler= (e)=>{\n        e.preventDefault();\n        if( userInfo.email===\"\" || userInfo.password===\"\" ){\n            alert(\"Error: empty value\");\n            return;\n        }\n\n        fetch(\"http://localhost:3002/auth/signup\", {\n                method: 'POST',\n                body: JSON.stringify(userInfo),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        ).then(\n            (res) => res.json()\n        ).then(\n            (res)=>{\n                if( !res.status ) alert(res.message)\n                dispatch( resolve(res) )\n                Auth.authenticateUser(res.token, res.email)\n                if(res.token){\n                    console.log(Auth.getToken());\n                    history.push('/exam')\n                }else{\n                    return;\n                }\n\n            }\n        ).catch(\n            (error)=>{\n                console.log(error);\n            }\n        )\n    }\n\n    return (\n        <div className=\"container\">\n            <form className=\"form-signin\" onSubmit={submitHandler} method=\"POST\" >\n                <h2 className=\"form-signin-heading\">Sign Up </h2>\n                <label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\n                <input  type=\"email\" id=\"inputEmail\" className=\"form-control\" onBlur={readEmail} name='email' placeholder=\"input email\" defaultValue=\"a@123.com\" required autoFocus />\n                <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n                <input type=\"password\" id=\"inputPassword\" className=\"form-control\" onBlur={readPassword} name='password' placeholder=\"input password\" />\n                <button className=\"btn btn-lg btn-primary btn-block\" > Signup </button>\n            </form>\n            <p>{prompt}</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state)=>({ prompt: state.userData.data.message })\nconst SignUpContainer = withRouter( connect(mapStateToProps)(SignUp) )\nexport default SignUpContainer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}